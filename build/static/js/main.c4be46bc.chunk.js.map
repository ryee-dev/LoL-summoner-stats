{"version":3,"sources":["components/MatchCard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MatchCard","props","win","gameDuration","summAId","summBId","keystone","primaryRune1","primaryRune2","primaryRune3","secondaryRune1","secondaryRune2","championId","kills","deaths","assists","kda","item0","item1","item2","item3","item4","item5","item6","champLevel","totalMinionsKilled","neutralMinionsKilled","neutralMinionsKilledTeamJungle","neutralMinionsKilledEnemyJungle","champData","itemData","spellData","getTotalCS","undefined","getItemName","itemKey","itemName","i","itemKeys","length","toString","itemNames","getSpellName","spellKey","spellName","spellKeys","spellNames","react_default","a","createElement","CardWrapper","CardRow","CardCol","secs","minutes","Math","floor","seconds","concat","SecondsToMins","champKey","championName","championKeys","championNames","getChampionName","toFixed","styled","div","_templateObject","_templateObject2","_templateObject3","App","_useState","useState","_useState2","Object","slicedToArray","modalStatus","setModalStatus","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","hits","_useState8","data","setData","_useState9","_useState10","summName","setSummName","_useState11","_useState12","summQuery","setSummQuery","summonerFormData","FormData","useFetch","method","findSummoner","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","set","stop","this","apply","arguments","useEffect","_ref2","_callee2","_context2","console","log","axios","get","then","res","catch","fetchData","loadingStatus","errorStatus","modal","response","query","AppShell","FloatingContainer","SummForm","action","autoComplete","onSubmit","SummInput","placeholder","value","name","onChange","e","target","SubmitButt","type","style","height","width","display","alignItems","justifyContent","position","color","ModalWrapper","ResultsModal","ListWrapper","map","match","components_MatchCard","key","gameId","outcome","summonerName","spell1Id","spell2Id","runes","items","championLevel","creepScore","App_templateObject","App_templateObject2","App_templateObject3","_templateObject4","_templateObject5","form","_templateObject6","input","_templateObject7","button","_templateObject8","Boolean","window","location","hostname","ReactDOM","render","react","fallback","src_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4be46bc.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ninterface MatchProps {\n  key: number;\n  win: string;\n  gameDuration: number;\n  summonerName: string;\n  summAId: number;\n  summBId: number;\n  keystone: number;\n  primaryRune1: number;\n  primaryRune2: number;\n  primaryRune3: number;\n  secondaryRune1: number;\n  secondaryRune2: number;\n  championId: number;\n  kills: number;\n  deaths: number;\n  assists: number;\n  kda: number;\n  item0: number;\n  item1: number;\n  item2: number;\n  item3: number;\n  item4: number;\n  item5: number;\n  item6: number;\n  champLevel: number;\n  totalMinionsKilled: number;\n  neutralMinionsKilled: number;\n  neutralMinionsKilledTeamJungle: number;\n  neutralMinionsKilledEnemyJungle: number;\n  champData: any;\n  itemData: any;\n  spellData: any;\n}\n\nconst MatchCard: React.FC<MatchProps> = (props: MatchProps) => {\n  const {\n    win,\n    gameDuration,\n    summAId,\n    summBId,\n    keystone,\n    primaryRune1,\n    primaryRune2,\n    primaryRune3,\n    secondaryRune1,\n    secondaryRune2,\n    championId,\n    kills,\n    deaths,\n    assists,\n    kda,\n    item0,\n    item1,\n    item2,\n    item3,\n    item4,\n    item5,\n    item6,\n    champLevel,\n    totalMinionsKilled,\n    neutralMinionsKilled,\n    neutralMinionsKilledTeamJungle,\n    neutralMinionsKilledEnemyJungle,\n    champData,\n    itemData,\n    spellData,\n  } = props;\n\n  // console.log(win);\n\n  const getTotalCS = () => {\n    let total;\n    if (\n      neutralMinionsKilledTeamJungle === undefined ||\n      neutralMinionsKilledEnemyJungle === undefined\n    ) {\n      total = totalMinionsKilled + neutralMinionsKilled;\n    } else {\n      total =\n        totalMinionsKilled +\n        neutralMinionsKilled +\n        neutralMinionsKilledTeamJungle +\n        neutralMinionsKilledEnemyJungle;\n    }\n    return total;\n  };\n\n  const getCsPerMin = () => {\n    const csPerMin = getTotalCS() / Math.floor(gameDuration / 60);\n    return csPerMin.toFixed(1);\n  };\n\n  const SecondsToMins = (secs: number) => {\n    const minutes = Math.floor(secs / 60);\n    const seconds = secs % 60;\n    return `${minutes}m ${seconds}s`;\n  };\n\n  const getChampionName = (champKey: number) => {\n    let championName;\n    for (let i = 0; i < champData.championKeys.length; i++) {\n      if (champKey.toString() === champData.championKeys[i]) {\n        championName = champData.championNames[i];\n      }\n    }\n    return championName;\n  };\n\n  const getItemName = (itemKey: number) => {\n    let itemName;\n    for (let i = 0; i < itemData.itemKeys.length; i++) {\n      if (itemKey.toString() === itemData.itemKeys[i]) {\n        itemName = itemData.itemNames[i];\n      }\n    }\n    return itemName;\n  };\n\n  const getSpellName = (spellKey: number) => {\n    let spellName;\n    for (let i = 0; i < spellData.spellKeys.length; i++) {\n      if (spellKey.toString() === spellData.spellKeys[i]) {\n        spellName = spellData.spellNames[i];\n      }\n    }\n    return spellName;\n  };\n\n  return (\n    <CardWrapper>\n      <CardRow>\n        <CardCol>\n          {win === 'Win' ? <p>Win</p> : <p>Lose</p>}\n          <p>{SecondsToMins(gameDuration)}</p>\n        </CardCol>\n        <CardCol>\n          <p>{getChampionName(championId)}</p>\n          {/* <p>{championId}</p> */}\n        </CardCol>\n        <CardCol>\n          <p>{getSpellName(summAId)}</p>\n          <p>{getSpellName(summBId)}</p>\n        </CardCol>\n        <CardCol>\n          <p>\n            {kills}/{deaths}/{assists}\n          </p>\n          {deaths === 0 ? <p>Perfect</p> : <p>{kda}:1 KDA</p>}\n        </CardCol>\n        <CardCol>\n          <p>level: {champLevel}</p>\n          <p>\n            {getTotalCS()} ({getCsPerMin()}) CS\n          </p>\n        </CardCol>\n        <CardCol>\n          <p>Item 1: {getItemName(item0)}</p>\n          <p>Item 2: {getItemName(item1)}</p>\n          <p>Item 3: {getItemName(item2)}</p>\n          <p>Item 4: {getItemName(item3)}</p>\n        </CardCol>\n        <CardCol>\n          <p>Item 5: {getItemName(item4)}</p>\n          <p>Item 6: {getItemName(item5)}</p>\n          <p>Trinket: {getItemName(item6)}</p>\n        </CardCol>\n      </CardRow>\n      <CardRow>\n        <p>Keystone: {keystone}</p>\n        <p>Primary Rune 1: {primaryRune1}</p>\n        <p>Primary Rune 2: {primaryRune2}</p>\n        <p>Primary Rune 3: {primaryRune3}</p>\n        <p>Secondary Rune 1: {secondaryRune1}</p>\n        <p>Secondary Rune 2: {secondaryRune2}</p>\n      </CardRow>\n    </CardWrapper>\n  );\n};\n\nexport default MatchCard;\n\nconst CardWrapper = styled.div`\n  height: auto;\n  width: 100%;\n  border: 2px solid black;\n  padding: 1rem 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  background-color: aliceblue;\n  margin: 1rem 0;\n  p {\n    font-size: 0.6rem;\n  }\n`;\n\nconst CardRow = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-evenly;\n  //border: 1px dotted black;\n`;\n\nconst CardCol = styled.div`\n  height: 100%;\n  //width: 10%;\n  //max-width: 100px;\n  margin: 0 0.4rem;\n  display: flex;\n  align-items: flex=start;\n  justify-content: space-evenly;\n  flex-direction: column;\n  border: 1px dotted black;\n`;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport useFetch from 'fetch-suspense';\nimport MatchCard from './components/MatchCard';\n\nconst App = () => {\n  const [modalStatus, setModalStatus] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState({ hits: [] });\n  const [summName, setSummName] = useState('');\n  const [summQuery, setSummQuery] = useState('');\n  const summonerFormData = new FormData();\n\n  const champData = useFetch(\n    'https://ror-stats-api.herokuapp.com/static/champions',\n    {\n      method: 'GET',\n    }\n  );\n\n  const itemData = useFetch(\n    'https://ror-stats-api.herokuapp.com/static/items',\n    {\n      method: 'GET',\n    }\n  );\n\n  const spellData = useFetch(\n    'https://ror-stats-api.herokuapp.com/static/spells',\n    {\n      method: 'GET',\n    }\n  );\n\n  const findSummoner = async () => {\n    setSummQuery(summName);\n    summonerFormData.set('summonerName', summQuery);\n  };\n\n  useEffect(() => {\n    setData({ hits: [] });\n    summonerFormData.set('summonerName', summQuery);\n\n    const fetchData = async () => {\n      setModalStatus(false);\n      setLoading(true);\n\n      if (summQuery !== '') {\n        setLoading(true);\n        console.log('fetching');\n        await axios\n          .get('https://ror-stats-api.herokuapp.com/api/summoner')\n          .then(res => {\n            setData({\n              hits: res.data,\n            });\n            setError(false);\n            setLoading(false);\n            setModalStatus(true);\n            return data;\n          })\n          .catch(() => {\n            setError(true);\n            console.log('error');\n          });\n      }\n    };\n\n    if (summQuery !== '') {\n      fetchData();\n    }\n\n    console.log({\n      loadingStatus: loading,\n      errorStatus: error,\n      modal: modalStatus,\n      response: data,\n      query: summQuery,\n    });\n  }, [summQuery]);\n\n  return (\n    <AppShell>\n      <FloatingContainer>\n        <SummForm\n          method=\"POST\"\n          action=\"https://ror-stats-api.herokuapp.com//api/summoner\"\n          autoComplete=\"off\"\n          onSubmit={findSummoner}\n        >\n          <SummInput\n            placeholder=\"Summoner Name\"\n            value={summName}\n            name=\"summName\"\n            onChange={e => setSummName(e.target.value)}\n          />\n          <SubmitButt type=\"submit\">submit</SubmitButt>\n        </SummForm>\n        <br />\n      </FloatingContainer>\n\n      {summQuery !== '' && loading && (\n        <div\n          style={{\n            height: '100%',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'absolute',\n          }}\n        >\n          <h1 style={{ color: 'white' }}>loading...</h1>\n        </div>\n      )}\n\n      {modalStatus && !loading && data.hits && (\n        <ModalWrapper>\n          <ResultsModal>\n            <ListWrapper>\n              {data.hits.map((match: any) => (\n                <MatchCard\n                  key={match.gameId}\n                  win={match.outcome}\n                  gameDuration={match.gameDuration}\n                  summonerName={match.summonerName}\n                  summAId={match.spell1Id}\n                  summBId={match.spell2Id}\n                  keystone={match.runes.keystone}\n                  primaryRune1={match.runes.primaryRune1}\n                  primaryRune2={match.runes.primaryRune2}\n                  primaryRune3={match.runes.primaryRune3}\n                  secondaryRune1={match.runes.secondaryRune1}\n                  secondaryRune2={match.runes.secondaryRune2}\n                  championId={match.championId}\n                  kills={match.kills}\n                  deaths={match.deaths}\n                  assists={match.assists}\n                  kda={match.kda}\n                  item0={match.items.item0}\n                  item1={match.items.item1}\n                  item2={match.items.item2}\n                  item3={match.items.item3}\n                  item4={match.items.item4}\n                  item5={match.items.item5}\n                  item6={match.items.item6}\n                  champLevel={match.championLevel}\n                  totalMinionsKilled={match.creepScore.totalMinionsKilled}\n                  neutralMinionsKilled={match.creepScore.neutralMinionsKilled}\n                  neutralMinionsKilledTeamJungle={\n                    match.creepScore.neutralMinionsKilledTeamJungle\n                  }\n                  neutralMinionsKilledEnemyJungle={\n                    match.creepScore.neutralMinionsKilledEnemyJungle\n                  }\n                  champData={champData}\n                  itemData={itemData}\n                  spellData={spellData}\n                />\n              ))}\n            </ListWrapper>\n          </ResultsModal>\n        </ModalWrapper>\n      )}\n\n      {!loading && modalStatus && error && (\n        <div\n          style={{\n            height: '100%',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'absolute',\n          }}\n        >\n          <h1 style={{ color: 'white' }}>data not found...</h1>\n        </div>\n      )}\n    </AppShell>\n  );\n};\n\nexport default App;\n\nconst AppShell = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100vh;\n  padding: 2rem 3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #06080b;\n  overflow: scroll;\n`;\n\nconst FloatingContainer = styled.div`\n  height: 100%;\n  background-color: #151a27;\n  border-radius: 4px;\n  width: 100%;\n  max-width: 1200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  //padding: 4rem 0;\n  overflow: scroll;\n\n  h1 {\n    color: white;\n  }\n\n  .data-wrapper {\n    position: absolute;\n    color: white;\n    margin: 2rem 0;\n    overflow: scroll;\n  }\n`;\n\nconst ModalWrapper = styled.div`\n  position: absolute;\n  width: 80%;\n  height: 80%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: scroll;\n`;\n\nconst ResultsModal = styled.div`\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  //padding: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: column;\n  overflow: scroll;\n\n  button {\n    position: fixed;\n    top: 10px;\n    right: 10px;\n  }\n`;\n\nconst ListWrapper = styled.div`\n  //height: 50%;\n  position: absolute;\n  padding: 0 1rem;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  flex-direction: column;\n  background-color: aliceblue;\n  overflow: scroll;\n\n  p {\n    font-size: 0.6rem;\n  }\n`;\n\nconst SummForm = styled.form`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  //background-color: #1D212B;\n  //background-color: #27303F;\n  border-radius: 6px;\n`;\n\nconst SummInput = styled.input`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.25);\n  outline: none;\n  border: none;\n  padding: 0.6rem 1rem;\n  width: 25%;\n  border-radius: 2px;\n  margin: 1rem;\n  transition: width 0.2s ease-in-out;\n  background-color: #f3f8ff;\n  caret-color: #565b63;\n  color: #565b63;\n\n  ::placeholder {\n    color: #565b63;\n  }\n\n  &:focus {\n    width: 40%;\n  }\n`;\n\nconst SubmitButt = styled.button`\n  //width: 10%;\n  padding: 0.6rem 2rem;\n  text-decoration: none;\n  outline: none;\n  //border: none;\n  border-radius: 6px;\n  background-color: transparent;\n  border: solid #1380f0 1px;\n  //color: white;\n  color: #1380f0;\n  cursor: pointer;\n  font-weight: bold;\n  letter-spacing: 1px;\n  text-align: center;\n\n  transition: background-color 0.2s ease-in-out, letter-spacing 0.2s ease-in-out,\n    color 0.2s ease-in-out;\n\n  &:hover {\n    //width: 25%;\n    background-color: #1380f0;\n    //letter-spacing: 4px;\n    color: #151a27;\n  }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// @ts-ignore\nReactDOM.render(\n  <Suspense\n    fallback={\n      <div\n        style={{\n          height: '100%',\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n        }}\n      >\n        <h1 style={{ color: 'white' }}>loading...</h1>\n      </div>\n    }\n  >\n    <App />\n  </Suspense>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}