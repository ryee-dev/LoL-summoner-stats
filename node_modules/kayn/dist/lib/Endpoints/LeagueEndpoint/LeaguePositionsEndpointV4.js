'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _LeagueSuperclass = require('./LeagueSuperclass');

var _LeagueSuperclass2 = _interopRequireDefault(_LeagueSuperclass);

var _Request = require('../../RequestClient/Request');

var _Request2 = _interopRequireDefault(_Request);

var _methodNames = require('../../Enums/method-names');

var _methodNames2 = _interopRequireDefault(_methodNames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class LeaguePositionsEndpointV4 extends _LeagueSuperclass2.default {
    constructor(config, limiter) {
        super();

        this.config = config;

        this.by = {
            summonerID: this.summonerID.bind(this)
        };

        this.list = this.listLeagueEntries.bind(this);

        this.limiter = limiter;
    }

    /**
     * Get league positions in all queues for a given summoner ID.
     *
     * Implements GET `/lol/league/v4/positions/by-summoner/{encryptedSummonerId}`.
     *
     * @param {string} summonerID - The ID of the summoner.
     */
    summonerID(summonerID) {
        return new _Request2.default(this.config, this.serviceName, `positions/by-summoner/${summonerID}`, _methodNames2.default.LEAGUE.GET_ALL_LEAGUE_POSITIONS_FOR_SUMMONER_V4, 'GET', this.limiter, null, false, 4);
    }

    /**
     * Get all the positional league entries.
     *
     * Implements GET `/lol/league/v4/positions/{positionalQueue}/{tier}/{division}/{position}/{page}/lol/league/v4/positional-rank-queues`.
     */
    listLeagueEntries(positionalQueue, tier, division, position, page) {
        return new _Request2.default(this.config, this.serviceName, `positions/${positionalQueue}/${tier}/${division}/${position}/${page}`, _methodNames2.default.LEAGUE.GET_ALL_POSITIONAL_LEAGUE_ENTRIES_V4, 'GET', this.limiter, null, false, 4);
    }
}

exports.default = LeaguePositionsEndpointV4;